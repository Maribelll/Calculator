{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u043A\\u0430\\u043B\\u044C\\u043A\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\\\\calcBroadFitFin\\\\simple-calculator\\\\nextjs\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nexport default function Home() {\n  const {\n    0: number1,\n    1: setNumber1\n  } = useState(0);\n  const {\n    0: number2,\n    1: setNumber2\n  } = useState(0);\n  const {\n    0: number3,\n    1: setNumber3\n  } = useState(0);\n  const {\n    0: checked1,\n    1: setChecked1\n  } = useState(false);\n  const {\n    0: checked2,\n    1: setChecked2\n  } = useState(false);\n  const {\n    0: checked3,\n    1: setChecked3\n  } = useState(false);\n  const {\n    0: result,\n    1: setResult\n  } = useState(\"0\");\n\n  function calculate(operator = \"\") {\n    let list = [];\n    if (checked1) list.push(number1);\n    if (checked2) list.push(number2);\n    if (checked3) list.push(number3);\n\n    if (list.length === 0) {\n      setResult(\"Please select fields\");\n      return;\n    }\n\n    if (list.length === 1) {\n      setResult(\"At least need 2 fields selected\");\n      return;\n    }\n\n    let total = list[0];\n\n    for (let idx = 1; idx < list.length; idx++) {\n      if (operator === \"+\") total += list[idx];\n      if (operator === \"-\") total -= list[idx];\n      if (operator === \"*\") total *= list[idx];\n      if (operator === \"/\") total /= list[idx];\n    }\n\n    setResult(total);\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"app\",\n    style: {\n      maxWidth: \"768px\",\n      margin: \"50px auto\",\n      border: \"solid grey 1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Flexible payment structures designed for your business.\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"inline-form\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"number1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Amount to finance\"), __jsx(\"input\", {\n    type: \"number\",\n    value: number1,\n    onChange: e => setNumber1(+e.target.value),\n    placeholder: \"0\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"number2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Term length\"), __jsx(\"input\", {\n    type: \"number\",\n    value: number2,\n    onChange: e => setNumber2(+e.target.value),\n    placeholder: \"0\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Estimated Payment\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, result)), __jsx(\"button\", {\n    value: result,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => {\n      calculate(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \" \", \"result\", \" \")))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/калькулятор/calcBroadFitFin/simple-calculator/nextjs/pages/index.js"],"names":["React","useState","Home","number1","setNumber1","number2","setNumber2","number3","setNumber3","checked1","setChecked1","checked2","setChecked2","checked3","setChecked3","result","setResult","calculate","operator","list","push","length","total","idx","maxWidth","margin","border","display","flexDirection","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Home() {\r\n  const [number1, setNumber1] = useState(0);\r\n  const [number2, setNumber2] = useState(0);\r\n  const [number3, setNumber3] = useState(0);\r\n  const [checked1, setChecked1] = useState(false);\r\n  const [checked2, setChecked2] = useState(false);\r\n  const [checked3, setChecked3] = useState(false);\r\n  const [result, setResult] = useState(\"0\");\r\n\r\n  function calculate(operator = \"\") {\r\n    let list = [];\r\n\r\n    if (checked1) list.push(number1);\r\n    if (checked2) list.push(number2);\r\n    if (checked3) list.push(number3);\r\n\r\n    if (list.length === 0) {\r\n      setResult(\"Please select fields\");\r\n      return;\r\n    }\r\n\r\n    if (list.length === 1) {\r\n      setResult(\"At least need 2 fields selected\");\r\n      return;\r\n    }\r\n\r\n    let total = list[0];\r\n    for (let idx = 1; idx < list.length; idx++) {\r\n      if (operator === \"+\") total += list[idx];\r\n      if (operator === \"-\") total -= list[idx];\r\n      if (operator === \"*\") total *= list[idx];\r\n      if (operator === \"/\") total /= list[idx];\r\n    }\r\n\r\n    setResult(total);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"app\"\r\n        style={{\r\n          maxWidth: \"768px\",\r\n          margin: \"50px auto\",\r\n          border: \"solid grey 1px\",\r\n        }}\r\n      >\r\n        <div className=\"container-form\">\r\n          <br />\r\n          <br />\r\n          <h1>Flexible payment structures designed for your business.</h1>\r\n          <br />\r\n          <br />\r\n\r\n          <div\r\n            className=\"inline-form\"\r\n            style={{ display: \"flex\", flexDirection: \"row\" }}\r\n          >\r\n            <div>\r\n              <label className=\"custom-control-label\" htmlFor=\"number1\">\r\n                Amount to finance\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={number1}\r\n                onChange={(e) => setNumber1(+e.target.value)}\r\n                placeholder=\"0\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-control-lg custom-switch\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={checked1}\r\n                  className=\"custom-control-input \" \r\n                  id=\"switch1\" \r\n                  onChange={e => {setChecked1(e.target.checked)}}\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"switch1\" />\r\n              </div>*/}\r\n\r\n            <div>\r\n              <label className=\"custom-control-label\" htmlFor=\"number2\">\r\n                Term length\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={number2}\r\n                onChange={(e) => setNumber2(+e.target.value)}\r\n                placeholder=\"0\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-control-lg custom-switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={checked2}\r\n                  className=\"custom-control-input \"\r\n                  id=\"switch2\"\r\n                  onChange={(e) => {\r\n                    setChecked2(e.target.checked);\r\n                  }}\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"switch2\" />\r\n              </div> */}\r\n\r\n            <div>\r\n              <label className=\"custom-control-label\" htmlFor=\"result\">\r\n                Estimated Payment\r\n              </label>\r\n              <h2>{result}</h2>\r\n            </div>\r\n            <button\r\n              value={result}\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                calculate(\"/\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              result{\" \"}\r\n            </button>\r\n          </div>\r\n\r\n          {/* <div className=\"form-control-lg custom-switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={checked3}\r\n                  className=\"custom-control-input \"\r\n                  id=\"switch3\"\r\n                  onChange={(e) => {\r\n                    setChecked3(e.target.checked);\r\n                  }}\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"switch3\" />\r\n              </div> */}\r\n\r\n          {/* <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  calculate(\"+\");\r\n                }}\r\n              >\r\n                {\" \"}\r\n                +{\" \"}\r\n              </button> */}\r\n          {/* <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  calculate(\"-\");\r\n                }}\r\n              >\r\n                {\" \"}\r\n                -{\" \"}\r\n              </button> */}\r\n          {/* <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  calculate(\"*\");\r\n                }}\r\n              >\r\n                {\" \"}\r\n                x{\" \"}\r\n              </button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}